#include "fidelity_integrals.h"

namespace experiment {

    std::complex<double> alpha_3_1_integ_part_1(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = (IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-c)*IonTrap.nu_list[k])
                        +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((-a+c)*IonTrap.nu_list[k]))
                +(cos((-a+c)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -cos((-b+c)*IonTrap.nu_list[k])*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                        *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                        *(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((a-c)*IonTrap.nu_list[k])
                                +cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-b+c)*IonTrap.nu_list[k]))
                        +(-(cos((-a+c)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +cos((-b+c)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-d)*IonTrap.nu_list[k])
                                +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+d)*IonTrap.nu_list[k]))
                        +(cos((-a+d)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -cos((-b+d)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                        *(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((a-d)*IonTrap.nu_list[k])
                                +cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-b+d)*IonTrap.nu_list[k]))
                        +(-(cos((-a+d)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +cos((-b+d)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+c)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+c)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(c*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(c*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        /(2.*(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                -(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+c)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+c)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(c*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(c*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        /(2.*(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                -(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+d)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+d)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(d*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(d*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        /(2.*(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+d)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+d)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(d*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(d*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        /(2.*(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(IonTrap.nu_list[k]
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-e)*IonTrap.nu_list[k])
                                +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+e)*IonTrap.nu_list[k]))
                        +(cos((-a+e)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -cos((-b+e)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(IonTrap.nu_list[k]
                        *(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((a-e)*IonTrap.nu_list[k])
                                +cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-b+e)*IonTrap.nu_list[k]))
                        +(-(cos((-a+e)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +cos((-b+e)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(IonTrap.nu_list[k]
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-f)*IonTrap.nu_list[k])
                                +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+f)*IonTrap.nu_list[k]))
                        +(cos((-a+f)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -cos((-b+f)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(IonTrap.nu_list[k]
                        *(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((a-f)*IonTrap.nu_list[k])
                                +cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-b+f)*IonTrap.nu_list[k]))
                        +(-(cos((-a+f)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +cos((-b+f)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+e)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+e)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(e*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(e*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+e)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+e)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(e*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(e*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+f)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+f)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(f*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(f*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+f)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+f)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(f*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(f*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)));

        return result;
    }

    std::complex<double> alpha_3_1_integ_part_2(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result =
                ((16.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *sin((b-e)*IonTrap.nu_list[k])
                                +IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+e)*IonTrap.nu_list[k])
                                +cos((-a+e)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                -cos((-b+e)*IonTrap.nu_list[k])*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
                                -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 2))+(4.0
                        *(4.0*IonTrap.nu_list[k]
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *(cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +a*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                -cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *cos(a*IonTrap.nu_list[k]-c
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k]))
                                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *cos(a*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0*IonTrap.nu_list[k]
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *(cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +b*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                -cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *cos(b*IonTrap.nu_list[k]-c
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k]))
                                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *cos(b*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -a*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +a*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                        -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *sin(a*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+4.0
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -b*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +b*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                        -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *sin(b*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
                                -4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 2))
                        -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(4.0*IonTrap.nu_list[k]
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *(cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +a*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                -cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *cos(a*IonTrap.nu_list[k]-c
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k]))
                                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *cos(a*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0*IonTrap.nu_list[k]
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *(cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +b*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                -cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *cos(b*IonTrap.nu_list[k]-c
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k]))
                                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *cos(b*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -a*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +a*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                        -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *sin(a*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+4.0
                                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -b*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +b*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                                        -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k]))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *sin(b*IonTrap.nu_list[k]-d
                                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])))
                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
                                        -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))+(4.0
                        *(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-2.0
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *cos((a-c)*IonTrap.nu_list[k])
                                +(-8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +4.0*pow(IonTrap.nu_list[k], 2)
                                                *pow(cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))), 2))
                                        *cos((a-d)*IonTrap.nu_list[k])
                                +4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                        *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin((a-c)*IonTrap.nu_list[k])
                                                -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((a-d)*IonTrap.nu_list[k])))
                                +IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(2.0
                                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                        *cos((b-c)*IonTrap.nu_list[k])
                                        +(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                -4.0*pow(IonTrap.nu_list[k], 2)
                                                        *pow(cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))),
                                                                2))*cos((b-d)*IonTrap.nu_list[k])
                                        +4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                                *(-(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((b-c)*IonTrap.nu_list[k]))
                                                        +sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                                *sin((b-d)*IonTrap.nu_list[k])))+2.0
                                *((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                        *cos((a-c)*IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        +2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                                *cos((a-d)*IonTrap.nu_list[k])
                                                *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                *sin((a-c)*IonTrap.nu_list[k])
                                        +(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                *sin((a-d)*IonTrap.nu_list[k]))
                                        *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                                *cos((b-c)*IonTrap.nu_list[k])
                                                *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                -2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        *IonTrap.nu_list[k]*cos((b-d)*IonTrap.nu_list[k])
                                                        *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                +(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                        *sin((b-c)*IonTrap.nu_list[k])
                                                -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                        *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                        *sin((b-d)*IonTrap.nu_list[k]))
                                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
                        +(16.0*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                *(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                *cos((b-c)*IonTrap.nu_list[k])
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        *cos((b-d)*IonTrap.nu_list[k])
                                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                -IonTrap.nu_list[k]
                                                        *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((b-c)*IonTrap.nu_list[k])+IonTrap.nu_list[k]
                                                *cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin((b-d)*IonTrap.nu_list[k]))
                                        +(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +IonTrap.nu_list[k])*sin(c
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                -IonTrap.nu_list[k])+a*IonTrap.nu_list[k])
                                                        -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                +IonTrap.nu_list[k])*sin(d
                                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                        -IonTrap.nu_list[k])+a*IonTrap.nu_list[k])
                                                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                -IonTrap.nu_list[k])*(sin(c
                                                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                -a*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])-sin(d
                                                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                                -a*IonTrap.nu_list[k]+d*IonTrap.nu_list[k]))))/2.
                                        +((-(IonTrap.nu_list[k]
                                                *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *cos((a-c)*IonTrap.nu_list[k]))+IonTrap.nu_list[k]
                                                *cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *cos((a-d)*IonTrap.nu_list[k])
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((a-c)*IonTrap.nu_list[k])
                                                -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((a-d)*IonTrap.nu_list[k]))
                                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                +(IonTrap.nu_list[k]
                                                        *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *cos((b-c)*IonTrap.nu_list[k])-IonTrap.nu_list[k]
                                                        *cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *cos((b-d)*IonTrap.nu_list[k])
                                                        -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*sin(c
                                                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                                *sin((b-c)*IonTrap.nu_list[k])
                                                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*sin(d
                                                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                                *sin((b-d)*IonTrap.nu_list[k]))
                                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k]))-(8.0
                        *(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*((cos(e*IonTrap.nu_list[k]
                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        -cos(e*IonTrap.nu_list[k]
                                -b*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                        *(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +cos((-a+e)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -cos((-b+e)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                        /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])))
                        /(16.*(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)));

        return result;
    }

    std::complex<double> alpha_3_1_integ_part_3(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = (IonTrap.nu_list[k]*(2.0*(-a+b)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                -sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                +sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                /(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k]))))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))/(2.
                        *pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-c)*IonTrap.nu_list[k])
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-c)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((a-c)*IonTrap.nu_list[k])
                                +IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-c)*IonTrap.nu_list[k]))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))+(IonTrap.nu_list[k]
                *(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        -2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        +sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                /(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k]))))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))/(2.
                        *pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                +(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-c)*IonTrap.nu_list[k])
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-c)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((a-c)*IonTrap.nu_list[k])
                                -IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-c)*IonTrap.nu_list[k]))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))+(IonTrap.nu_list[k]
                *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k])
                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(cos(e*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(e*IonTrap.nu_list[k]-b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                *cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-4.0*pow(IonTrap.nu_list[k], 2))
                        *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(IonTrap.nu_list[k]*((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        *(cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +f*IonTrap.nu_list[k])
                                -cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +f*IonTrap.nu_list[k]))
                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *cos(f*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(f*IonTrap.nu_list[k]
                                        -b*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                        *cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))))
                        /(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-sin(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +e*IonTrap.nu_list[k])
                                +sin(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +e*IonTrap.nu_list[k]))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -e*IonTrap.nu_list[k])+sin(e*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-sin(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +f*IonTrap.nu_list[k])
                                +sin(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +f*IonTrap.nu_list[k]))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -f*IonTrap.nu_list[k])+sin(f*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(((cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])+e*IonTrap.nu_list[k])
                        -cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +e*IonTrap.nu_list[k]))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +(-cos(e*IonTrap.nu_list[k]
                                -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +cos(e*IonTrap.nu_list[k]
                                        -b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        *sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k])
                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -e*IonTrap.nu_list[k])+sin(e*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -4.0*pow(IonTrap.nu_list[k], 2))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -(((cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])+f*IonTrap.nu_list[k])
                        -cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +f*IonTrap.nu_list[k]))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +(-cos(f*IonTrap.nu_list[k]
                                -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +cos(f*IonTrap.nu_list[k]
                                        -b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        *sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +f*IonTrap.nu_list[k])
                        -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +f*IonTrap.nu_list[k])
                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -f*IonTrap.nu_list[k])+sin(f*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -4.0*pow(IonTrap.nu_list[k], 2))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)));

        return result;
    }

    std::complex<double> alpha_3_1_integ_part_4(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = ((4.0*IonTrap.nu_list[k]
                *(pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)
                        -pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)))
                /(3.*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2)))
                +(4.0*IonTrap.nu_list[k]*(pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)
                        -pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
                +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k])))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2)))
                +(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                        *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k])))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2)))+(pow(IonTrap.nu_list[k], 2)
                *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +c*IonTrap.nu_list[k])
                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +c*IonTrap.nu_list[k])
                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(cos(c*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(c*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k])))))
                /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
                        *pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2)))
                +(pow(IonTrap.nu_list[k], 2)*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k])))))
                        /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
                                *pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2)))
                +(2.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                                +c*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                -cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k])))))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))+(IonTrap.nu_list[k]
                *(-2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        +2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        -sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                        -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2))+(2.0
                *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +c*IonTrap.nu_list[k])
                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +c*IonTrap.nu_list[k])
                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(cos(c*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(c*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k]))))
                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                /pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)+(2.0
                *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +e*IonTrap.nu_list[k])
                        -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k])
                        -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(cos(e*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(e*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k]))))
                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                /pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                +(2.0*IonTrap.nu_list[k]*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-c)*IonTrap.nu_list[k])
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-c)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((a-c)*IonTrap.nu_list[k])
                                -IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-c)*IonTrap.nu_list[k])))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
                                        *pow(IonTrap.nu_list[k], 2)
                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4))
                +(4.0*IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-c)*IonTrap.nu_list[k])
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-c)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((a-c)*IonTrap.nu_list[k])
                                +IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-c)*IonTrap.nu_list[k])))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2), 2))
                +(4.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-e)*IonTrap.nu_list[k])
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-e)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((a-e)*IonTrap.nu_list[k])
                                -IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-e)*IonTrap.nu_list[k])))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2), 2))
                +(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *(4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *cos((b-e)*IonTrap.nu_list[k])
                                +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                +2.0*IonTrap.nu_list[k]*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((b-e)*IonTrap.nu_list[k])))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                        -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4)))
                -(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-sin(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +c*IonTrap.nu_list[k])
                                +sin(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k]))
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -c*IonTrap.nu_list[k])+sin(c*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
                +(sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -e*IonTrap.nu_list[k])
                                -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                                -sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        -b*IonTrap.nu_list[k]+e*IonTrap.nu_list[k]))
                                +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(e*IonTrap.nu_list[k]-a
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4)))/4.0;

        return result;
    }

    std::complex<double> alpha_3_2_integ_part_1(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = (IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                *(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))*(IonTrap.nu_list[k]
                *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-e)*IonTrap.nu_list[k])
                        +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((-a+e)*IonTrap.nu_list[k]))
                +(cos((-a+e)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -cos((-b+e)*IonTrap.nu_list[k])*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                        *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(-sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                +sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))*(IonTrap.nu_list[k]
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-f)*IonTrap.nu_list[k])
                                +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+f)*IonTrap.nu_list[k]))
                        +(cos((-a+f)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -cos((-b+f)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(-(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                *sin((c-e)*IonTrap.nu_list[k]))
                                +IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *sin((d-e)*IonTrap.nu_list[k])+(cos((c-e)*IonTrap.nu_list[k])
                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))-cos((d-e)*IonTrap.nu_list[k])
                                *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(pow(IonTrap.nu_list[k], 2)
                                        -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*(IonTrap.nu_list[k]
                        *(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*sin((c-f)*IonTrap.nu_list[k])
                                -cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *sin((d-f)*IonTrap.nu_list[k]))
                        +(-(cos((c-f)*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                +cos((d-f)*IonTrap.nu_list[k])
                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(pow(IonTrap.nu_list[k], 2)
                                        -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +((sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                        *(cos((c-e)*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -cos((d-e)*IonTrap.nu_list[k])
                                        *cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        +(sin((c-e)*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -sin((d-e)*IonTrap.nu_list[k])
                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(pow(IonTrap.nu_list[k], 2)
                                        -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -((sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(IonTrap.nu_list[k]
                        *(cos((c-f)*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -cos((d-f)*IonTrap.nu_list[k])
                                        *cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        +(sin((c-f)*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -sin((d-f)*IonTrap.nu_list[k])
                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2))
                                *(pow(IonTrap.nu_list[k], 2)
                                        -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                -((sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+e)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+e)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(e*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(e*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +((sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos((-a+f)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+f)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(f*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(f*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(-pow(IonTrap.nu_list[k], 2)
                                +pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)));

        return result;
    }

    std::complex<double> alpha_3_2_integ_part_2(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = ((IonTrap.nu_list[k]*(2.0*(c-d)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                +sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                +(4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                *cos((c-e)*IonTrap.nu_list[k])
                                -IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *cos((d-e)*IonTrap.nu_list[k])
                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *sin((c-e)*IonTrap.nu_list[k])
                                -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                        *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *sin((d-e)*IonTrap.nu_list[k]))
                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                +(4.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(cos(e*IonTrap.nu_list[k])
                                *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*cos(c*IonTrap.nu_list[k])
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*cos(d*IonTrap.nu_list[k])
                                                *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        +IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin(c*IonTrap.nu_list[k])
                                        -IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin(d*IonTrap.nu_list[k]))
                                +(-(IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *cos(c*IonTrap.nu_list[k]))
                                        +IonTrap.nu_list[k]*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *cos(d*IonTrap.nu_list[k])
                                        -(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin(c*IonTrap.nu_list[k])
                                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                *sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin(d*IonTrap.nu_list[k]))*sin(e*IonTrap.nu_list[k]))
                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                        /(pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                -(4.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))*(IonTrap.nu_list[k]
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((b-e)*IonTrap.nu_list[k])
                                +cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin((-a+e)*IonTrap.nu_list[k]))
                        +(cos((-a+e)*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -cos((-b+e)*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
                +(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(2.0
                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)+pow(IonTrap.nu_list[k], 2)
                                +pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *cos((a-c)*IonTrap.nu_list[k])+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                        -4.0*pow(IonTrap.nu_list[k], 2)
                                *pow(cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))), 2))
                        *cos((a-d)*IonTrap.nu_list[k])
                        +4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                *(-(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        *sin((a-c)*IonTrap.nu_list[k]))
                                        +sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin((a-d)*IonTrap.nu_list[k])))
                        +IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-2.0
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                *cos((b-c)*IonTrap.nu_list[k])
                                +(-8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +4.0*pow(IonTrap.nu_list[k], 2)
                                                *pow(cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))), 2))
                                        *cos((b-d)*IonTrap.nu_list[k])
                                +4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                        *(sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                *sin((b-c)*IonTrap.nu_list[k])
                                                -sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                                        *sin((b-d)*IonTrap.nu_list[k])))+2.0
                        *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                *cos((a-c)*IonTrap.nu_list[k])
                                *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                -2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                        *cos((a-d)*IonTrap.nu_list[k])
                                        *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                +(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                        *sin((a-c)*IonTrap.nu_list[k])
                                -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                        *sin((a-d)*IonTrap.nu_list[k]))
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                        *cos((b-c)*IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        +2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
                                                *cos((b-d)*IonTrap.nu_list[k])
                                                *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                                        -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                *sin((b-c)*IonTrap.nu_list[k])
                                        +(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                                +pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 2)
                                                *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                                                *sin((b-d)*IonTrap.nu_list[k]))
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*(IonTrap.nu_list[k]
                        *((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+a*IonTrap.nu_list[k]
                                        -c*IonTrap.nu_list[k])
                                -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k])
                                +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *(cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -a*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                                -cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        -a*IonTrap.nu_list[k]+d*IonTrap.nu_list[k])))
                        *cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))+IonTrap.nu_list[k]
                        *((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+b*IonTrap.nu_list[k]
                                        -c*IonTrap.nu_list[k])
                                +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -b*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k])
                                +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -b*IonTrap.nu_list[k]+d*IonTrap.nu_list[k]))
                        *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(((2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+a*IonTrap.nu_list[k]
                                        -c*IonTrap.nu_list[k])
                                +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -a*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                        *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +a*IonTrap.nu_list[k]-d*IonTrap.nu_list[k])
                                +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                -a*IonTrap.nu_list[k]+d*IonTrap.nu_list[k]))
                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                +b*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                                *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        -b*IonTrap.nu_list[k]+c*IonTrap.nu_list[k])
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        +b*IonTrap.nu_list[k]-d*IonTrap.nu_list[k])
                                        +(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])
                                                *sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
                                                        -b*IonTrap.nu_list[k]+d*IonTrap.nu_list[k]))
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
                                *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
                +(2.0*(-sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        +sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
                        *((-cos((-a+e)*IonTrap.nu_list[k]+a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +cos((-b+e)*IonTrap.nu_list[k]+b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                /(IonTrap.nu_list[k]-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +(-cos(e*IonTrap.nu_list[k]
                                        -a*(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +cos(e*IonTrap.nu_list[k]-b*(IonTrap.nu_list[k]
                                                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                        /(IonTrap.nu_list[k]+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                        /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))-IonTrap.nu_list[k])
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k])))/4.0;

        return result;
    }

    std::complex<double> alpha_3_2_integ_part_3(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = ((IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                *((-cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                        +e*IonTrap.nu_list[k])
                        +cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k]))
                        /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +(-cos(e*IonTrap.nu_list[k]
                                -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +cos(e*IonTrap.nu_list[k]
                                        -b*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        +(4.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((a-e)*IonTrap.nu_list[k])
                                        *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos((b-e)*IonTrap.nu_list[k])
                                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin((a-e)*IonTrap.nu_list[k])
                                        -IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin((b-e)*IonTrap.nu_list[k])))
                                /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))))
                /(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2))
                +(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(2.0
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))*cos((a-e)*IonTrap.nu_list[k])
                                +(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -2.0*pow(IonTrap.nu_list[k], 2))*cos((b-e)*IonTrap.nu_list[k])
                                +2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                -3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])+pow(IonTrap.nu_list[k], 2)
                                *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]
                                        -e*IonTrap.nu_list[k])
                                -2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +b*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                +3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +b*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])-pow(IonTrap.nu_list[k], 2)
                                *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                        -e*IonTrap.nu_list[k])
                                +2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                +3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])+pow(IonTrap.nu_list[k], 2)
                                *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -b*IonTrap.nu_list[k]+e*IonTrap.nu_list[k]))
                                -4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                +pow(IonTrap.nu_list[k], 2))*cos((c-e)*IonTrap.nu_list[k])
                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))+4.0*IonTrap.nu_list[k]
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))
                                *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *sin((c-e)*IonTrap.nu_list[k])))
                        /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
                                -2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2))
                                *cos((a-f)*IonTrap.nu_list[k])+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(2.0
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))*cos((b-f)*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+f*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -b*IonTrap.nu_list[k]+f*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-f*IonTrap.nu_list[k])-cos(f*IonTrap.nu_list[k]-b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                                -4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                -pow(IonTrap.nu_list[k], 2))*cos((c-f)*IonTrap.nu_list[k])
                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0*IonTrap.nu_list[k]
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))
                                *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *sin((c-f)*IonTrap.nu_list[k])))
                        /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(IonTrap.nu_list[k]*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *((-cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +f*IonTrap.nu_list[k])
                                +cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +f*IonTrap.nu_list[k]))
                                /(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                +(cos(f*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(f*IonTrap.nu_list[k]-b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])))
                                        /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                +(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +a*IonTrap.nu_list[k]-f*IonTrap.nu_list[k])
                                                +(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +b*IonTrap.nu_list[k]-f*IonTrap.nu_list[k])
                                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                -a*IonTrap.nu_list[k]+f*IonTrap.nu_list[k])
                                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                        -b*IonTrap.nu_list[k]+f*IonTrap.nu_list[k]))))
                                        /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                        /(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2))
                +((4.0*IonTrap.nu_list[k]
                        *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
                        *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*cos((c-e)*IonTrap.nu_list[k])
                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        +2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2)
                                        +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                +pow(IonTrap.nu_list[k], 2))
                                                *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *cos(a*IonTrap.nu_list[k])
                                        -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                +pow(IonTrap.nu_list[k], 2)
                                                +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                        +pow(IonTrap.nu_list[k], 2))
                                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                                *cos(b*IonTrap.nu_list[k])
                                        +8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                *cos(c*IonTrap.nu_list[k])
                                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -2.0*pow(IonTrap.nu_list[k], 2)*cos(c*IonTrap.nu_list[k])
                                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                *cos(c*IonTrap.nu_list[k])
                                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +2.0*pow(IonTrap.nu_list[k], 2)*cos(c*IonTrap.nu_list[k])
                                                *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                                *sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(a*IonTrap.nu_list[k])
                                        -3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                                *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                *sin(b*IonTrap.nu_list[k]))*sin(e*IonTrap.nu_list[k])
                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos(e*IonTrap.nu_list[k])
                                *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -IonTrap.nu_list[k]))
                                        -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])*sin(b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        -IonTrap.nu_list[k]))-4.0
                                        *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                -pow(IonTrap.nu_list[k], 2))
                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*IonTrap.nu_list[k])
                                        +(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])*(2.0
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])*sin(a*IonTrap.nu_list[k])-2.0
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])*sin(b*IonTrap.nu_list[k])
                                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                        *(sin(a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k]))-sin(b
                                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                        +IonTrap.nu_list[k]))))))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))*(pow(IonTrap.nu_list[k], 2)
                                -pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))+((-4.0*IonTrap.nu_list[k]
                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
                *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*cos((c-f)*IonTrap.nu_list[k])
                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                -2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2)
                                +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *cos(a*IonTrap.nu_list[k])
                                -(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2)
                                        +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                +pow(IonTrap.nu_list[k], 2))
                                                *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *cos(b*IonTrap.nu_list[k])
                                +8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*cos(c*IonTrap.nu_list[k])
                                        *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -2.0*pow(IonTrap.nu_list[k], 2)*cos(c*IonTrap.nu_list[k])
                                        *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                -8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*cos(c*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +2.0*pow(IonTrap.nu_list[k], 2)*cos(c*IonTrap.nu_list[k])
                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(a*IonTrap.nu_list[k])
                                -3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(b*IonTrap.nu_list[k]))*sin(f*IonTrap.nu_list[k])
                +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*cos(f*IonTrap.nu_list[k])
                        *((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *sin(a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]))
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(b*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -IonTrap.nu_list[k]))+4.0
                                *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        -pow(IonTrap.nu_list[k], 2))
                                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin(c*IonTrap.nu_list[k])
                                -(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(2.0*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                *sin(a*IonTrap.nu_list[k])-2.0
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])*sin(b*IonTrap.nu_list[k])
                                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                        *(sin(a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k]))-sin(b
                                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                        +IonTrap.nu_list[k]))))))
                *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                /((4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                        -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2)
                        +pow(IonTrap.nu_list[k], 4))
                        *(pow(IonTrap.nu_list[k], 2)-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                +(((-2.0*cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +e*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])+2.0
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +(cos(e*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(e*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(-sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                                +sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k]))
                                /(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        +(sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                -e*IonTrap.nu_list[k])+sin(e*IonTrap.nu_list[k]
                                -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(-pow(IonTrap.nu_list[k], 2)+pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2))
                +(((2.0*cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +f*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])+2.0
                        *(-(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                +f*IonTrap.nu_list[k])
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]))
                                +(-cos(f*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        +cos(f*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(-sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +f*IonTrap.nu_list[k])
                                +sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +f*IonTrap.nu_list[k]))
                                /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +(sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]
                                -f*IonTrap.nu_list[k])+sin(f*IonTrap.nu_list[k]
                                -b*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        *(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
                        /(-pow(IonTrap.nu_list[k], 2)+pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
                /(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)));

        return result;
    }

    std::complex<double> alpha_3_2_integ_part_4(double a, double b, double c, double d, double e, double f, double t_p,
            double t_pp, double t_ppp, int k, experiment::ion_trap& IonTrap)
    {

        const std::complex<double> j(0, 1);

        std::complex<double> result = ((IonTrap.nu_list[k]
                *(-9.0*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +9.0*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +6.0*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(-2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        +2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        +sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        -6.0*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(-2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        +2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        +sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
                /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                +(6.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
                                -2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2))
                                *cos((a-e)*IonTrap.nu_list[k])+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(2.0
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))*cos((b-e)*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                -b*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                -((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *(cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])-cos(e*IonTrap.nu_list[k]-b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                                -4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                -pow(IonTrap.nu_list[k], 2))*cos((c-e)*IonTrap.nu_list[k])
                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))-4.0*IonTrap.nu_list[k]
                                *(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +pow(IonTrap.nu_list[k], 2))
                                *cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *sin((c-e)*IonTrap.nu_list[k])))/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
                        *(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2)))
                +(6.0*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((-cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                                +cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k]))
                                /(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                +(cos(e*IonTrap.nu_list[k]
                                        -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(e*IonTrap.nu_list[k]-b
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])))
                                        /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                +(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                *sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                                +(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                        *sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +b*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                                +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                        *(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                                                -sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                        -b*IonTrap.nu_list[k]+e*IonTrap.nu_list[k]))))
                                        /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k]))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                -(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                        *sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        *((4.0*IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *cos((c-e)*IonTrap.nu_list[k])
                                *(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
                                /(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+2.0*sin((a-e)*IonTrap.nu_list[k])
                                -2.0*sin((b-e)*IonTrap.nu_list[k])+4.0
                                *(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        +sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                                *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*sin((c-e)*IonTrap.nu_list[k])
                                +((-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        +3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        -pow(IonTrap.nu_list[k], 2))
                                        *sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +a*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                        +(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                -3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        *IonTrap.nu_list[k]+pow(IonTrap.nu_list[k], 2))
                                                *sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +b*IonTrap.nu_list[k]-e*IonTrap.nu_list[k])
                                        +((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                                *(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])
                                                *(sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        -a*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])
                                                        -sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                -b*IonTrap.nu_list[k]+e*IonTrap.nu_list[k])))
                                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                                -pow(IonTrap.nu_list[k], 2))))
                        /(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
                                *pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2))
                -(12.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*((2.0*IonTrap.nu_list[k]
                        *(pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)
                                -pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 3)))
                        /(3.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *((cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                        -cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k]))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +(-cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                                +cos(c*IonTrap.nu_list[k]-b
                                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                                +IonTrap.nu_list[k])))
                                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        -(IonTrap.nu_list[k]*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *((-sin(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                        +sin(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k]))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                                -c*IonTrap.nu_list[k])+sin(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])))
                                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                        +IonTrap.nu_list[k])))/2.))
                        /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                                -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))+(2.0
                *(-6.0*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        -2.0*IonTrap.nu_list[k]*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(6.0*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])*IonTrap.nu_list[k]
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +2.0*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *IonTrap.nu_list[k]
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                +12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k])-3.0*pow(IonTrap.nu_list[k], 2)
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])-3.0*pow(IonTrap.nu_list[k], 2)
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                -12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k])+3.0*pow(IonTrap.nu_list[k], 2)
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])+3.0*pow(IonTrap.nu_list[k], 2)
                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                *cos(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        +c*IonTrap.nu_list[k])
                                +3.0*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *pow(IonTrap.nu_list[k], 2)*cos(c*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +3.0*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *pow(IonTrap.nu_list[k], 2)
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *cos(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *cos(c*IonTrap.nu_list[k]-b
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +3.0*pow(IonTrap.nu_list[k], 2)
                                        *(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(c*IonTrap.nu_list[k]-b
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +3.0*pow(IonTrap.nu_list[k], 2)
                                        *(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *cos(c*IonTrap.nu_list[k]-b
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                -6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k])
                                +6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                                +c*IonTrap.nu_list[k])
                                +6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *IonTrap.nu_list[k]*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*IonTrap.nu_list[k]-a
                                                *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                +6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
                                        *(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                                        *sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                                        *sin(c*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k])))
                                /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))))
                /(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
                        -5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2)
                        +pow(IonTrap.nu_list[k], 4))+(6.0*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                *((-2.0*cos(a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        +e*IonTrap.nu_list[k])*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])+2.0
                        *(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                                /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                                +(cos(e*IonTrap.nu_list[k]
                                        -a*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                                        -cos(e*IonTrap.nu_list[k]-b*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
                                                +IonTrap.nu_list[k])))
                                        /((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
                        *sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
                        +(-sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-a*IonTrap.nu_list[k]
                                +e*IonTrap.nu_list[k])
                                +sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-b*IonTrap.nu_list[k]
                                        +e*IonTrap.nu_list[k]))
                                /(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
                        +(sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]
                                -e*IonTrap.nu_list[k])+sin(e*IonTrap.nu_list[k]
                                -a*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                                /(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
                /(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
                        *((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))/24.0;

        return result;
    }

}