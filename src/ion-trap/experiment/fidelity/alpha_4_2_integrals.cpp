#include "fidelity_integrals.h"

namespace experiment {

std::complex<double> alpha_4_2_1_integ_part_1(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = (-(exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
			*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
			*(exp(j*b*IonTrap.nu_list[kp])*(-(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
					+exp(j*a*IonTrap.nu_list[kp])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])))
			+sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(exp(j*c*IonTrap.nu_list[k])*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*IonTrap.nu_list[k])
							-exp(j*d*IonTrap.nu_list[k])*(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
									+j*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
											*IonTrap.nu_list[k]))
					*((-(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							/exp(j*a*IonTrap.nu_list[kp])+(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							/exp(j*b*IonTrap.nu_list[kp]))
			-sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(exp(j*c*IonTrap.nu_list[k])*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*IonTrap.nu_list[k])
							-exp(j*d*IonTrap.nu_list[k])*(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
									+j*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
											*IonTrap.nu_list[k]))
					*((-(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							/exp(j*a*IonTrap.nu_list[kp])+(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							/exp(j*b*IonTrap.nu_list[kp]))-exp(j*(f*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
			*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
			*sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
			*(exp(j*b*IonTrap.nu_list[kp])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
					+exp(j*a*IonTrap.nu_list[kp])*(-(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
			+exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(exp(j*b*IonTrap.nu_list[kp])*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							-exp(j*a*IonTrap.nu_list[kp])
									*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]))
			-exp(j*(f*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(exp(j*b*IonTrap.nu_list[kp])*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							-exp(j*a*IonTrap.nu_list[kp])
									*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp])))
			/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2)));

	return result;
}

std::complex<double> alpha_4_2_1_integ_part_2(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = ((2.0*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*((exp(j*c*IonTrap.nu_list[k])-exp(j*e*IonTrap.nu_list[k]))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					+(-exp(j*d*IonTrap.nu_list[k])+exp(j*e*IonTrap.nu_list[k]))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))+j
					*(exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							-exp(j*d*IonTrap.nu_list[k])*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
					*IonTrap.nu_list[k])
			*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
			+2.0*j*exp(j*e*IonTrap.nu_list[k])*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))*IonTrap.nu_list[k]
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)+pow(IonTrap.nu_list[k], 2))
			+exp(j*c*IonTrap.nu_list[k])*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					+IonTrap.nu_list[k]*(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k])
							-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
									*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*IonTrap.nu_list[k]
							+j*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
											+pow(IonTrap.nu_list[k], 2))))+exp(j*d*IonTrap.nu_list[k])
			*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)+IonTrap.nu_list[k]
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
							+3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
									*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*IonTrap.nu_list[k]
							-j*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
											+pow(IonTrap.nu_list[k], 2)))))*(exp(j*b*IonTrap.nu_list[kp])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
			+exp(j*a*IonTrap.nu_list[kp])*(-(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])))
			/(2.*exp(j*(a+b)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
									*pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[kp], 2)));

	return result;
}

std::complex<double> alpha_4_2_1_integ_part_3(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	// TimeConstraint -> 1
	std::complex<double> result = ((exp(j*(f*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
			*sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
			*(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[kp], 2))
					*(exp(j*b*IonTrap.nu_list[kp])*(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							+exp(j*a*IonTrap.nu_list[kp])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
					+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							*(exp(j*b*IonTrap.nu_list[kp])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])+exp(j*a*IonTrap.nu_list[kp])
									*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]))))
			/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)+pow(IonTrap.nu_list[k], 2))
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			+(exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[k]
					*(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[kp], 2))*(exp(j*b*IonTrap.nu_list[kp])
							*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							-exp(j*a*IonTrap.nu_list[kp])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
							+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(exp(j*b*IonTrap.nu_list[kp])
											*(-2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp])+j*exp(j*a*IonTrap.nu_list[kp])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
									+pow(IonTrap.nu_list[k], 2))
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			+(exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
					*(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[kp], 2))*(exp(j*b*IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							+exp(j*a*IonTrap.nu_list[kp])*(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(exp(j*b*IonTrap.nu_list[kp])
											*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp])+exp(j*a*IonTrap.nu_list[kp])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
									+pow(IonTrap.nu_list[k], 2))
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			+(exp(j*(f*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[k]
					*(-2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[kp], 2))*(exp(j*b*IonTrap.nu_list[kp])
							*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							-exp(j*a*IonTrap.nu_list[kp])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
							+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(j*exp(j*b*IonTrap.nu_list[kp])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp])+exp(j*a*IonTrap.nu_list[kp])
											*(-2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
									+pow(IonTrap.nu_list[k], 2))
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			-(sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(-(((2.0*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))-(2.0*exp(j*c*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+(exp(j*a*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
											*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(3.0*pow(IonTrap.nu_list[k], 2)-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
													+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*a*IonTrap.nu_list[kp]))
							+((2.0*exp(j*b*IonTrap.nu_list[k])
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									-(2.0*exp(j*c*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))
											/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))+(exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
											-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(3.0*pow(IonTrap.nu_list[k], 2)
															-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
															+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*b*IonTrap.nu_list[kp])))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
							*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2)))
			+(sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(-(((2.0*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))-(2.0*exp(j*c*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+(exp(j*a*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
											*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(3.0*pow(IonTrap.nu_list[k], 2)-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
													+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*a*IonTrap.nu_list[kp]))
							+((2.0*exp(j*b*IonTrap.nu_list[k])
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									-(2.0*exp(j*c*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))
											/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))+(exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
											-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(3.0*pow(IonTrap.nu_list[k], 2)
															-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
															+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*b*IonTrap.nu_list[kp])))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
							*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2))))/2.0;

	return result;
}

std::complex<double> alpha_4_2_1_integ_part_3_indeterminate(double a, double b, double c, double d, double e, double f,
		double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	// TimeConstraint -> 0.1
	std::complex<double> result =
			(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)*IonTrap.nu_list[k]
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(exp(j*(-a+e)*IonTrap.nu_list[k])
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*IonTrap.nu_list[k]
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))+2.0
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2))
							*(-1.0*j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					+exp(j*(-b+e)*IonTrap.nu_list[k])
							*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*IonTrap.nu_list[k]
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-2.0*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
					+2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
							*IonTrap.nu_list[k]
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
							*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							*(exp(j*(-a+f)*IonTrap.nu_list[k])
									*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*IonTrap.nu_list[k]*sin(2.0*a
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))+2.0
											*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+exp(j*(-b+f)*IonTrap.nu_list[k])
											*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k])
													*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*cos(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)))
															+j*IonTrap.nu_list[k]*sin(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))))-2.0
													*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
															-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
													*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(b
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
					-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
							*(exp(j*(-a+e)*IonTrap.nu_list[k])
									*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*IonTrap.nu_list[k]*sin(2.0*a
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))+2.0
											*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+exp(j*(-b+e)*IonTrap.nu_list[k])
											*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k])
													*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*cos(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)))
															+j*IonTrap.nu_list[k]*sin(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))))-2.0
													*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
															-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
													*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(b
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
					-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
							*(exp(j*(-a+f)*IonTrap.nu_list[k])
									*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*IonTrap.nu_list[k]*sin(2.0*a
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))-2.0
											*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+exp(j*(-b+f)*IonTrap.nu_list[k])
											*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k])
													*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*cos(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)))
															+j*IonTrap.nu_list[k]*sin(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))))+2.0
													*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
															-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
													*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(b
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
					+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
							*(2.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
									*IonTrap.nu_list[k]
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									-2.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
											*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-4.0*exp(j*(-a+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+4.0*exp(j*(-b+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-4.0*exp(j*(-a+c)*IonTrap.nu_list[k])
											*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(j*IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+4.0*exp(j*(-b+c)*IonTrap.nu_list[k])
											*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(j*IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(pow(IonTrap.nu_list[k], 2)
							-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2))
					-(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
							*(2.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
									*IonTrap.nu_list[k]
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									-2.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
											*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*IonTrap.nu_list[k]
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-4.0*exp(j*(-a+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+4.0*exp(j*(-b+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-4.0*exp(j*(-a+c)*IonTrap.nu_list[k])
											*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(j*IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+4.0*exp(j*(-b+c)*IonTrap.nu_list[k])
											*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(j*IonTrap.nu_list[k]
													*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*(pow(IonTrap.nu_list[k], 2)
							-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)))
					/(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2), 3)
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2))*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
							*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)));

	return result;
}

std::complex<double> alpha_4_2_1_integ_part_4(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = (exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
			*(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[kp], 2))
					*(exp(j*b*IonTrap.nu_list[kp])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							-exp(j*a*IonTrap.nu_list[kp])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
					+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							*(exp(j*b*IonTrap.nu_list[kp])*(-2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])+j*exp(j*a*IonTrap.nu_list[kp])
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]))))
			/(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			+(exp(j*(e*IonTrap.nu_list[k]-(a+b)*IonTrap.nu_list[kp]))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[kp], 2))*(exp(j*b*IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp])
							+exp(j*a*IonTrap.nu_list[kp])*(-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(exp(j*b*IonTrap.nu_list[kp])
											*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp])+exp(j*a*IonTrap.nu_list[kp])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))))
					/(2.*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)))
			+(sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(-(((2.0*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))-(2.0*exp(j*c*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+(exp(j*a*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
											*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(3.0*pow(IonTrap.nu_list[k], 2)-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
													+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*a*IonTrap.nu_list[kp]))
							+((2.0*exp(j*b*IonTrap.nu_list[k])
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									-(2.0*exp(j*c*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))
											/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))+(exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
											-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(3.0*pow(IonTrap.nu_list[k], 2)
															-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
															+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*b*IonTrap.nu_list[kp])))
					/(2.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2), 2))
			+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(((2.0*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))-(2.0*exp(j*c*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp]))
							/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+(exp(j*a*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
											*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(3.0*pow(IonTrap.nu_list[k], 2)-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
													+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*a*IonTrap.nu_list[kp])
							+((-2.0*exp(j*b*IonTrap.nu_list[k])
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
									+(2.0*exp(j*c*IonTrap.nu_list[k])
											*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[k])
											*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*IonTrap.nu_list[kp]))
											/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))+(exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)))
											-cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]*pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2)
											+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(3.0*pow(IonTrap.nu_list[k], 2)
															-4.0*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
															+pow(IonTrap.nu_list[kp], 2))))
									/((-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))/exp(j*b*IonTrap.nu_list[kp])))
					/(2.*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2),
							2))+(pow(IonTrap.nu_list[k], 2)*(((2.0*exp(j*c*IonTrap.nu_list[k])
			*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-j*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
			/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
			+(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
					*(3.0*IonTrap.nu_list[k]-2.0*IonTrap.nu_list[kp])
					-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(5.0*IonTrap.nu_list[k]-2.0*IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp])+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2)
							-IonTrap.nu_list[k]*IonTrap.nu_list[kp])
					-sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp])
							*(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k], 2)-IonTrap.nu_list[k]*IonTrap.nu_list[kp])))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp])
							*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp])))/exp(j*a*IonTrap.nu_list[kp])
			+((2.0*exp(j*c*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
					+exp(j*b*IonTrap.nu_list[k])*((-6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							/(-9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))
							+((-1.0*j*exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]))
									/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])+(j
									*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+exp(3.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]))
									/(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
									+(j*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
											/(exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
									+(sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]))
											/(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))/2.))
					/exp(j*b*IonTrap.nu_list[kp])))/(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
			*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2)
					+pow(IonTrap.nu_list[k], 4)))-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
			*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(exp(j*(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*pow(1.0+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
							*pow(IonTrap.nu_list[k], 6)-8.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
							*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+2.0*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])
							+8.0*exp(2.0*j*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(exp(j*b*IonTrap.nu_list[k])-exp(j*c*IonTrap.nu_list[k]))
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
											-10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4))
							+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 4)*(exp(j*b*IonTrap.nu_list[k])
									*pow(1.0+exp(2.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))-4.0*exp(j
									*(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(7.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-6.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2)))
							+8.0*exp(2.0*j*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 3)*(-(exp(j*b*IonTrap.nu_list[k])
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp])
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2)))+exp(j*c*IonTrap.nu_list[k])
									*(5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
											*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(9.0+5.0
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*IonTrap.nu_list[kp]
											-3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*pow(IonTrap.nu_list[kp], 2)
											-2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 3)))
							+2.0*exp(2.0*j*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 2)*(exp(j*b*IonTrap.nu_list[k])
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(-13.0
											+11.0*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											+2.0*pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2))+exp(j*c*IonTrap.nu_list[k])
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
											*(49.0+9.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-40.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(17.0+5.0
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*pow(IonTrap.nu_list[kp], 2)
											+8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*pow(IonTrap.nu_list[kp], 3)
											+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 4)))
							+4.0*exp(2.0*j*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
									*(-2.0*j*exp(j*b*IonTrap.nu_list[k])
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))
											*(4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
													+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(3.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)+pow(IonTrap.nu_list[kp], 2)))
											+exp(j*c*IonTrap.nu_list[k])
													*(8.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*IonTrap.nu_list[kp]*(-5.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)+pow(IonTrap.nu_list[kp], 2))-j*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(9.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	4)-10
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)*pow(IonTrap.nu_list[kp], 2)
															+pow(IonTrap.nu_list[kp], 4))))))
					/exp(j*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[kp]))
					-(j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-(exp(j
							*(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*pow(1.0+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
							*pow(IonTrap.nu_list[k], 6)*IonTrap.nu_list[kp])+8.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]))
							*(-1.0+exp(j*(-a+c)*IonTrap.nu_list[k]))
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[kp]
							*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4))
							+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 5)*(8.0*exp(j
									*(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
									*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]
									*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+2.0*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp])+exp(j*a*IonTrap.nu_list[k])
									*pow(1.0+exp(2.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2)))+4.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 4)*(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-3.0*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])
							*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+exp(j*(-a+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(7.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-6.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2)))+2.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 2)*((pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-pow(IonTrap.nu_list[kp], 2))
							*(16.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-3.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(-7.0+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*IonTrap.nu_list[kp]
									-8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*pow(IonTrap.nu_list[kp], 2)
									-2.0*pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[kp], 3))
							-exp(j*(-a+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
											*(49.0+9.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-40.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(17.0+5.0
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*pow(IonTrap.nu_list[kp], 2)
											+8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*pow(IonTrap.nu_list[kp], 3)
											+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 4)))+2.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 3)*(4.0*exp(j*(-a+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
							*(-5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
									*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(9.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*IonTrap.nu_list[kp]
									+3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*pow(IonTrap.nu_list[kp], 2)
									+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[kp], 3))
							-(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(13.0+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-2.0*IonTrap.nu_list[kp]
													*(5.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*sin(2.0*a*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)))+3.0*pow(cos(
															a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
															*IonTrap.nu_list[kp])))+4.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[k]))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
							*(exp(j*(-a+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
											*IonTrap.nu_list[kp]
											-8.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*pow(IonTrap.nu_list[kp], 3)
											+j*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
															-10*pow((IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)), 2)
																	*pow(IonTrap.nu_list[kp], 2)
															+pow(IonTrap.nu_list[kp], 4)))
									-(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))
											*(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*(-3.0
													+cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													+IonTrap.nu_list[kp]
															*(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	*IonTrap.nu_list[kp]-2.0*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))*cos(2.0*a
																	*(IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)))
																	*IonTrap.nu_list[kp]+j*sin(2.0*a
																	*(IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)))*(5.0
																	*pow((IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)), 2)
																	-pow(IonTrap.nu_list[kp], 2)))))))/exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[kp]))
					+(j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-(exp(j
							*(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*pow(1.0+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
							*pow(IonTrap.nu_list[k], 6)*IonTrap.nu_list[kp])+8.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]))
							*(-1.0+exp(j*(-b+c)*IonTrap.nu_list[k]))
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[kp]
							*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4))
							+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 5)*(8.0*exp(j
									*(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
									*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]
									*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+2.0*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp])+exp(j*b*IonTrap.nu_list[k])
									*pow(1.0+exp(2.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2)))+4.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 4)*(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-3.0*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])
							*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
							+exp(j*(-b+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(7.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-6.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2)))+2.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 2)*((pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-pow(IonTrap.nu_list[kp], 2))
							*(16.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-3.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(-7.0+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*IonTrap.nu_list[kp]
									-8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*pow(IonTrap.nu_list[kp], 2)
									-2.0*pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[kp], 3))
							-exp(j*(-b+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
											*(49.0+9.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-40.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(17.0+5.0
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*pow(IonTrap.nu_list[kp], 2)
											+8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*pow(IonTrap.nu_list[kp], 3)
											+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 4)))+2.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]))
							*pow(IonTrap.nu_list[k], 3)*(4.0*exp(j*(-b+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
							*(-5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
									*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(9.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*IonTrap.nu_list[kp]
									+3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*pow(IonTrap.nu_list[kp], 2)
									+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[kp], 3))
							-(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[kp], 2))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(13.0+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-2.0*IonTrap.nu_list[kp]
													*(5.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*sin(2.0*b*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)))+3.0*pow(cos(
															b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
															*IonTrap.nu_list[kp])))+4.0*exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[k]))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
							*(exp(j*(-b+c)*IonTrap.nu_list[k])*IonTrap.nu_list[kp]
									*(40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
											*IonTrap.nu_list[kp]
											-8.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*pow(IonTrap.nu_list[kp], 3)
											+j*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
															-10*pow((IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p)), 2)
																	*pow(IonTrap.nu_list[kp], 2)
															+pow(IonTrap.nu_list[kp], 4)))
									-(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))
											*(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*(-3.0
													+cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													+IonTrap.nu_list[kp]
															*(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	*IonTrap.nu_list[kp]-2.0*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))*cos(2.0*b
																	*(IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)))
																	*IonTrap.nu_list[kp]+j*sin(2.0*b
																	*(IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)))*(5.0
																	*pow((IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p)), 2)
																	-pow(IonTrap.nu_list[kp], 2)))))))/exp(j
							*(2.0*(b+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+b*IonTrap.nu_list[kp]))
					+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-(exp(j
							*(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*pow(1.0+exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
							*pow(IonTrap.nu_list[k], 6))+8.0*exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
							*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+2.0*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[kp])
							-8.0*exp(2.0*j*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(exp(j*a*IonTrap.nu_list[k])-exp(j*c*IonTrap.nu_list[k]))
									*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
											-10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4))
							-exp(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 4)*(exp(j*a*IonTrap.nu_list[k])
									*pow(1.0+exp(2.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))-4.0*exp(j
									*(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+c*IonTrap.nu_list[k]))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(7.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											-4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											-6.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2)))
							+8.0*exp(2.0*j*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 3)*(exp(j*a*IonTrap.nu_list[k])
									*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp])
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))+exp(j*c*IonTrap.nu_list[k])
									*(-5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
											*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(9.0+5.0
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
													*IonTrap.nu_list[kp]
											+3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*pow(IonTrap.nu_list[kp], 2)
											+2.0*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 3)))
							+4.0*exp(2.0*j*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
									*(2.0*j*exp(j*a*IonTrap.nu_list[k])
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[kp], 2))
											*(4.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
													+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(3.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)+pow(IonTrap.nu_list[kp], 2)))
											+exp(j*c*IonTrap.nu_list[k])
													*(-8.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															*IonTrap.nu_list[kp]*(-5.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)+pow(IonTrap.nu_list[kp], 2))+j*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(9.0
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	4)-10
															*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)*pow(IonTrap.nu_list[kp], 2)
															+pow(IonTrap.nu_list[kp], 4))))
							+2.0*exp(2.0*j*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*pow(IonTrap.nu_list[k], 2)*(-(exp(j*a*IonTrap.nu_list[k])
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[kp], 2))
									*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*(-13.0
											+11.0*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+8.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[kp]
											+2.0*pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
													*pow(IonTrap.nu_list[kp], 2)))+exp(j*c*IonTrap.nu_list[k])
									*(-(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*(49.0
											+9.0*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
											+2.0*IonTrap.nu_list[kp]*(20.0*j
													*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[kp]
															*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)),
																	2)*(17.0+5.0*cos(2.0*c*(IonTrap.delta[0][0]
																	+IonTrap.get_stark_shift(0, t_p))))
																	-IonTrap.nu_list[kp]*(4.0*j*(IonTrap.delta[0][0]
																			+IonTrap.get_stark_shift(0, t_p))*sin(2.0*c
																			*(IonTrap.delta[0][0]
																					+IonTrap.get_stark_shift(0, t_p)))
																			+pow(cos(c*(IonTrap.delta[0][0]
																							+IonTrap.get_stark_shift(0, t_p))),
																					2)*IonTrap.nu_list[kp])))))))/exp(j
							*(2.0*(a+c)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+a*IonTrap.nu_list[kp]))))
			/(4.*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2))
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[kp])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[kp])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]+IonTrap.nu_list[kp])
					*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
							+IonTrap.nu_list[kp]));

	return result;
}

std::complex<double> alpha_4_2_1_integ_part_4_indeterminate(double a, double b, double c, double d, double e, double f,
		double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	// TimeConstraint -> 0.1
	std::complex<double> result = ((0.16666666666666666*j
			*(3.0/exp(j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+exp(-3.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-3.0/exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-exp(-3.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k])
			/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]))
			+(0.16666666666666666*j*(3.0*exp(j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+exp(3.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-3.0*exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-exp(3.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k])
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))+(2.0
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
			/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-(2.0*(j*exp(j*(-a+c)*IonTrap.nu_list[k])
			*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+exp(j*(-b+c)*IonTrap.nu_list[k])
					*(-1.0*j*IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
			/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(j*exp(j*b*IonTrap.nu_list[k])*IonTrap.nu_list[k]
					*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					+exp(j*a*IonTrap.nu_list[k])*IonTrap.nu_list[k]
							*(-1.0*j*IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))/(exp(j
					*(c*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							+(a+b)*IonTrap.nu_list[k]))
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
			+(j*exp(j*b*IonTrap.nu_list[k])*IonTrap.nu_list[k]
					*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					+exp(j*a*IonTrap.nu_list[k])*IonTrap.nu_list[k]
							*(-1.0*j*IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))/(exp(j
					*((a+b)*IonTrap.nu_list[k]
							-c*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
					*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])))
			/(4.*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]))
			-(0.5*j*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(exp(j*(-a+e)*IonTrap.nu_list[k])
							*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*IonTrap.nu_list[k]
													*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-2.0*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							+exp(j*(-b+e)*IonTrap.nu_list[k])
									*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*IonTrap.nu_list[k]*sin(2.0*b
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))+2.0
											*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
					/((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2), 2)
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2)))
			+(j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
					*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-j*pow(IonTrap.nu_list[k], 3)*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-3.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+3.0*j*pow(IonTrap.nu_list[k], 3)*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*pow(IonTrap.nu_list[k], 3)*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-12.0*exp(j*(-a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
							*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
							*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+6.0*j*exp(j*(-a+c)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-6.0*exp(j*(-b+c)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))+IonTrap.nu_list[k]
									*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					+3.0*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									+2.0*exp(j*(-a+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
					/(12.*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4)))
			+(-1.0*j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])*IonTrap.nu_list[k]
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])*IonTrap.nu_list[k]
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2)
									+exp(j*(-a+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2)
									-exp(j*(-b+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													-j*IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+3.0*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(j
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
							-2.0*exp(j*(-a+c)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+IonTrap.nu_list[k]
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+3.0*IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									+2.0*exp(j*(-b+c)*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
					/(12.*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2),
							2)*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-pow(IonTrap.nu_list[k], 2)))
			+((4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-(exp(j*(-a+c)*IonTrap.nu_list[k])
					*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+exp(j*(-b+c)*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+j*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*(cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+IonTrap.nu_list[k]*(2.0*(a-b)*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*(j*exp(j*(-a+c)*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+exp(j*(-b+c)*IonTrap.nu_list[k])*(-1.0*j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))/(4.
					*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2), 2))
			+((exp(j*(-a+e)*IonTrap.nu_list[k])
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*IonTrap.nu_list[k]
											*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))+2.0
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-pow(IonTrap.nu_list[k], 2))
							*(-1.0*j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					+exp(j*(-b+e)*IonTrap.nu_list[k])
							*((-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*IonTrap.nu_list[k]
													*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-2.0*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											-pow(IonTrap.nu_list[k], 2))*(-1.0*j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))/(2.
					*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2), 2)
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_1(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = ((j
			*(exp(j*a*IonTrap.nu_list[k])*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-exp(j*b*IonTrap.nu_list[k])*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)+pow(IonTrap.nu_list[k], 2))
			+pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*((((-exp(j*a*IonTrap.nu_list[k])+exp(j*c*IonTrap.nu_list[k]))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(exp(j*b*IonTrap.nu_list[k])-exp(j*c*IonTrap.nu_list[k]))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							+((exp(j*a*IonTrap.nu_list[k])-exp(j*d*IonTrap.nu_list[k]))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(-exp(j*b*IonTrap.nu_list[k])+exp(j*d*IonTrap.nu_list[k]))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)+j
							*(exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									-exp(j*d*IonTrap.nu_list[k])
											*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*IonTrap.nu_list[k]
							+(exp(j*a*IonTrap.nu_list[k])*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-exp(j*b*IonTrap.nu_list[k])
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
											-sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))))
									*pow(IonTrap.nu_list[k], 2))
			+(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 2)
					*(-(exp(j*c*IonTrap.nu_list[k])*(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							+j*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*IonTrap.nu_list[k]))
							+exp(j*d*IonTrap.nu_list[k])*(sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
									+j*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
											*IonTrap.nu_list[k])))*(exp(j*f*IonTrap.nu_list[kp])
			*(sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
					-j*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[kp])
			+exp(j*e*IonTrap.nu_list[kp])*(-(sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
					+j*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[kp])))
			/(exp(j*(e+f)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)+pow(IonTrap.nu_list[k], 2))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)-pow(IonTrap.nu_list[kp], 2)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_2(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = (8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+4.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+8.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+4.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+8.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-16.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+8.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-20.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+20.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+10.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-10.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+4.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-4.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+2.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			-8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			+16.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+16.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+20.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+24.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+8.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+16.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+24.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+8.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+16.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+16.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+20.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]+4.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+24.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+16.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+8.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]
			+24.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]+4.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]+4.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*IonTrap.nu_list[kp]
			+8.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*IonTrap.nu_list[kp]-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			+12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]+32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			-12.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]+40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			-15.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]-40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			+15.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]-8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			+3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]+8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			-3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			-16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			+16.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			+8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			-8.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]+32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 7)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			+28.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			-28.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			-14.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			+14.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]-56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]+56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			-12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			+12.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			+6.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]
			-6.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp]+24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]-24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp]
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+12.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+13.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+24.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+24.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+2.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+12.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+24.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+13.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+24.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			+2.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)+j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 2)
			+2.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 2)
			-12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)-56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			+21.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)+56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			-21.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			+16.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			+2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-2.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)+32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			+17.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-17.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			+exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)-34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)+34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)-24.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			-9.0*j*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			+exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			-exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)+2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			-exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(-(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 2)
			-12.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 6)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2)
			+9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])
									*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2)
			+24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])
									*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2)
			+8.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+2.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+16.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+16.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+9.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)+3.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+32.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+6.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+2.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+6.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+2.0*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+16.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+32.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+16.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+9.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)+3.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+6.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 3)
			+2.0*exp(j*d*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 3)+32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			-9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)-32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			+9.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)-34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			+9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)+34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			-9.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)+2.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)-2.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			+8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			-8.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			+2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			-2.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)-16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)+16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			-11.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			+11.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			-5.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			+5.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)+22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)-22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)
			+3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			-3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			+3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)
			-3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3)-6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)+6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 3)+3.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+16.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+16.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+3.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*d*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)
			+16.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+3.0*j*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+16.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+3.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 4)-16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)+22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)-22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)-6.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)+6.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)-6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)+6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)+6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)-6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			-3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)-16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4)
			+3.0*exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
					*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)
			+2.0*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)
			+6.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)
			+2.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)
			+6.0*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)+exp(j*(d*IonTrap.nu_list[k]+(-d+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)
			+2.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			*pow(IonTrap.nu_list[kp], 5)
			+6.0*exp(j*d*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 5)-6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)+6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)+6.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)-6.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)
			-exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			+exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			-exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)+2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)
			+exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			-exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			+exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			-exp(j*(-d+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)+2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5)
			-exp(j*(-d+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
					*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(-(exp(j*a*IonTrap.nu_list[k])
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*(sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 6)
			+2.0*exp(j*d*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 6)
			+2.0*j*exp(j*d*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 6)
			+2.0*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*pow(IonTrap.nu_list[kp], 6)-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 6)-2.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 6)+2.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 6)-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*(exp(j*a*IonTrap.nu_list[k])
			*(j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 6))
			/(2.*exp(j*e*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)-pow(IonTrap.nu_list[k], 2))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
							+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
									*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_2_indeterminate(double a, double b, double c, double d, double e, double f,
		double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result =
			((8.0*j*c*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)*IonTrap.nu_list[k]
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(10.0*j*d*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 3)
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(2.0*j*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 5)
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(16.0*exp(j*(c-e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(4.0*exp(j*(c-e)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							*pow(IonTrap.nu_list[k], 4)*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-(16.0*exp(j*(d-e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
					*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*exp(j*(d-e)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							*pow(IonTrap.nu_list[k], 4)*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(16.0*j*exp(j*(c-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*j*exp(j*(c-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(j*pow(IonTrap.nu_list[k], 5)*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(16.0*j*exp(j*(d-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(4.0*j*exp(j*(d-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(16.0*j*exp(j*(c-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(4.0*j*exp(j*(c-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(16.0*j*exp(j*(d-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*j*exp(j*(d-e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(16.0*exp(j*(c-e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					-(4.0*exp(j*(c-e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-(16.0*exp(j*(d-e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
					*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*exp(j*(d-e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(8.0*j*d*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)*IonTrap.nu_list[k]
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(10.0*j*c*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 3)
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(2.0*j*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 5)
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(4.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(j*pow(IonTrap.nu_list[k], 5)*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)*(exp(j*a*IonTrap.nu_list[k])
							*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*(exp(j*a*IonTrap.nu_list[k])
									*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*(exp(j*a*IonTrap.nu_list[k])
									*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(20*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(j*IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*pow(IonTrap.nu_list[k], 5)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(-(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					-(20*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*pow(IonTrap.nu_list[k], 5)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(-(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					-(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(20*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)*pow(IonTrap.nu_list[k], 3)
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))*(exp(j*a*IonTrap.nu_list[k])
							*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+exp(j*b*IonTrap.nu_list[k])
									*(-(IonTrap.nu_list[k]*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 4)*IonTrap.nu_list[k]
							*sin(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(-(IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*c*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*cos(2.0*d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*d*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(20*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 3)*pow(IonTrap.nu_list[k], 2)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 5)
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)))
					+(4.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))*pow(IonTrap.nu_list[k], 4)
							*sin(d*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)))
							*(-1.0*j*exp(j*a*IonTrap.nu_list[k])
									*(IonTrap.nu_list[k]*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+exp(j*b*IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
							/(exp(j*e*IonTrap.nu_list[k])*(pow(IonTrap.nu_list[k], 2)
									-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2))))
					/(4.*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))
							*pow(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k], 2)
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp))+IonTrap.nu_list[k], 2)
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_pp)), 2)
									+pow(IonTrap.nu_list[k], 2)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_3(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result =
			((-4.0*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					+4.0*exp(j*b*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					-2.0*j*exp(j*a*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					+2.0*j*exp(j*b*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					+exp(j*a*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 2)
					-exp(j*b*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 2)
					+3.0*exp(j*a*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					-3.0*exp(j*b*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					-j*exp(j*a*IonTrap.nu_list[k])*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*pow(IonTrap.nu_list[k], 3)
					+j*exp(j*b*IonTrap.nu_list[k])*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*pow(IonTrap.nu_list[k], 3)
					-2.0*j*exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k], 2))
					+2.0*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*((exp(j*a*IonTrap.nu_list[k])-exp(j*c*IonTrap.nu_list[k]))
									*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+(-exp(j*b*IonTrap.nu_list[k])+exp(j*c*IonTrap.nu_list[k]))
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))+j
									*(exp(j*a*IonTrap.nu_list[k])
											*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-exp(j*b*IonTrap.nu_list[k])
													*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									*IonTrap.nu_list[k])
							*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+pow(IonTrap.nu_list[k], 2)))*(exp(j*f*IonTrap.nu_list[kp])
					*(sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp))
							-j*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[kp])
					+exp(j*e*IonTrap.nu_list[kp])*(-(sin(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))
							+j*cos(f*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)))*IonTrap.nu_list[kp])))
					/(2.*exp(j*(e+f)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
									-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*pow(IonTrap.nu_list[k], 2)+pow(IonTrap.nu_list[k], 4))
							*(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_ppp)), 2)
									+pow(IonTrap.nu_list[kp], 2)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_4(double a, double b, double c, double d, double e, double f, double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = -(8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
			+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
			+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			+8.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
			+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
			+8.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
			+(8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(20.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*pow(IonTrap.nu_list[k], 3)*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*IonTrap.nu_list[k]*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(10.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(4.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*pow(IonTrap.nu_list[k], 5)*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k])))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2))))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2))))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[kp]
			+16.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[kp]
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[kp]
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
			+16.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*IonTrap.nu_list[kp]
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
			+20.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*IonTrap.nu_list[kp]
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*IonTrap.nu_list[kp]
			+24.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*IonTrap.nu_list[kp]
			+8.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*IonTrap.nu_list[kp]+16.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
			*IonTrap.nu_list[kp]
			+24.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*IonTrap.nu_list[kp]
			+8.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*IonTrap.nu_list[kp]+4.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*IonTrap.nu_list[kp]+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*IonTrap.nu_list[kp])
			/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(15.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			-(8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(14.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*pow(IonTrap.nu_list[k], 4)*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(28.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*pow(IonTrap.nu_list[k], 2)*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(40*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*IonTrap.nu_list[kp])
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-j*exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(-1.0*j*exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+j*pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+j*exp(j*b*IonTrap.nu_list[k])
							*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*IonTrap.nu_list[kp])
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			-(8.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*IonTrap.nu_list[kp])
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							+pow(IonTrap.nu_list[k], 3))
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 2)
			+12.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 2)
			+24.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 2)+13.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 2)
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 2)+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*pow(IonTrap.nu_list[kp], 2)+6.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*pow(IonTrap.nu_list[kp], 2)
			+24.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 2)
			+2.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 2)+j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
			*pow(IonTrap.nu_list[kp], 2)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*pow(IonTrap.nu_list[kp], 2)
			+(12.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(56.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*IonTrap.nu_list[k]*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*pow(IonTrap.nu_list[k], 5)*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(17.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*pow(IonTrap.nu_list[k], 3)*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(21.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(24.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 2))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(12.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-j*exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(-1.0*j*exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(j*exp(j*a*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
					*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+j*pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 2))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(24.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 2))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							+pow(IonTrap.nu_list[k], 3))+8.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[kp], 3)
			+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[kp], 3)
			+16.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 3)
			+32.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
			*pow(IonTrap.nu_list[kp], 3)
			+16.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 3)
			+32.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 3)+9.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 3)+3.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 3)
			+6.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 3)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 3)+4.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
			*pow(IonTrap.nu_list[kp], 3)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 3)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*pow(IonTrap.nu_list[kp], 3)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
			*pow(IonTrap.nu_list[kp], 3)
			+2.0*exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 4)
					*pow(IonTrap.nu_list[kp], 3)
			+(9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(34.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			-(8.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			-(2.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(11.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*pow(IonTrap.nu_list[k], 2)*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(5.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*pow(IonTrap.nu_list[k], 4)*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(9.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 3))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(-1.0*j*exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 5)
					*(-(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 3))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(32.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(j*exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+j*pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
					*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 3))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 3))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							+pow(IonTrap.nu_list[k], 3))
			+16.0*j*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 4)
			+3.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 4)
			+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
			*pow(IonTrap.nu_list[kp], 4)
			+16.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 4)+3.0*j*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 4)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 4)
			+6.0*exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*pow(IonTrap.nu_list[kp], 4)+2.0*exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 3)
			*pow(IonTrap.nu_list[kp], 4)+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
			*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
			+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 4))
			/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*pow(IonTrap.nu_list[k], 3)*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(6.0*j*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*IonTrap.nu_list[k]*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(22.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 4))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-j*exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 4))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 4))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 4))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+j*pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+j*exp(j*b*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 4))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 4))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			-(6.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
							*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									+pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 4))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*IonTrap.nu_list[k]
							+pow(IonTrap.nu_list[k], 3))+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[kp], 5)
			+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[kp], 5)
			+2.0*exp(j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 5)
			+6.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 5)
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 5)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 5)+exp(j*(c*IonTrap.nu_list[k]+(-c+e)*IonTrap.nu_list[kp]))
			*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
			*pow(IonTrap.nu_list[kp], 5)
			+6.0*exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 5)+(6.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
			*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
			*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 5))
			/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(6.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(exp(j*a*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*pow(IonTrap.nu_list[k], 2)*(-(exp(j*a*IonTrap.nu_list[k])
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(exp(j*(-c+e)*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(-(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 5))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							+exp(j*b*IonTrap.nu_list[k])*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 5))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(3.0*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 3)
					*(-(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
							+exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 5))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(6.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
					*(exp(j*a*IonTrap.nu_list[k])*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+j*pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+j*exp(j*b*IonTrap.nu_list[k])
							*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]
									-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
											*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 5))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							-j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 5))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+2.0*j*exp(j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(-sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[kp], 6)
			+2.0*exp(j*c*IonTrap.nu_list[k])*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*(sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 6)+(2.0*j*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
			*(exp(j*a*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					-exp(j*b*IonTrap.nu_list[k])*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
			*pow(IonTrap.nu_list[kp], 6))
			/(-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(exp(j*a*IonTrap.nu_list[k])
					*(j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
					+exp(j*b*IonTrap.nu_list[k])*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]))
					*pow(IonTrap.nu_list[kp], 6))
					/(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*pow(IonTrap.nu_list[k], 2)
					*(exp(j*a*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k])
							-exp(j*b*IonTrap.nu_list[k])*(2.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*IonTrap.nu_list[k]))*pow(IonTrap.nu_list[kp], 6))
					/(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
			+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(j*exp(j*a*IonTrap.nu_list[k])
					*(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							-pow(cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2))+exp(j*b*IonTrap.nu_list[k])
					*(-2.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*IonTrap.nu_list[k]
							+j*pow(cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
									*pow(IonTrap.nu_list[k], 2)))*pow(IonTrap.nu_list[kp], 6))
					/(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
			+(16.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 7)*IonTrap.nu_list[k]
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 5)
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(20*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*pow(IonTrap.nu_list[k], 3)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*pow(IonTrap.nu_list[k], 2)
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))*IonTrap.nu_list[kp])
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 4)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))*IonTrap.nu_list[kp])
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(9.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 3)
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 2))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*IonTrap.nu_list[k]
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 2))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 2))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 3))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 2)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 3))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*IonTrap.nu_list[k]
					*(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							-exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 4))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			+((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
							+exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])))
					*pow(IonTrap.nu_list[kp], 4))
					/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
									+IonTrap.nu_list[kp]))
			-2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*pow(IonTrap.nu_list[k], 3)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
							+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
													-IonTrap.nu_list[kp])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
											+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
													/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
															*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 5)
					*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
							+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
													-IonTrap.nu_list[kp])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
											+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
													/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
															*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*pow(IonTrap.nu_list[k], 2)
					*IonTrap.nu_list[kp]*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-10*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 4)
					*IonTrap.nu_list[kp]*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 2)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+7.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 2)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 5)
					*pow(IonTrap.nu_list[kp], 2)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 3)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 4)
					*pow(IonTrap.nu_list[kp], 3)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 4)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 4)*(-(exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									+j*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+4.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)*pow(IonTrap.nu_list[k], 2)
					*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
							+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
													-IonTrap.nu_list[kp])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
											+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
													/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
															*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-4.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*pow(IonTrap.nu_list[k], 4)
					*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
							+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
													-IonTrap.nu_list[kp])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
											+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
													/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
															*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-4.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 6)*IonTrap.nu_list[k]*IonTrap.nu_list[kp]
					*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
							*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
							+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
									*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
													-IonTrap.nu_list[kp])
													*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))
											+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
															*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
													/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
															*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
																	-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*pow(IonTrap.nu_list[k], 3)
					*IonTrap.nu_list[kp]*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+3.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 5)
					*IonTrap.nu_list[kp]*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+8.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*pow(IonTrap.nu_list[k], 2)
					*pow(IonTrap.nu_list[kp], 2)*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-8.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 4)
					*pow(IonTrap.nu_list[kp], 2)*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			-5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*IonTrap.nu_list[k]
					*pow(IonTrap.nu_list[kp], 3)*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.)
			+5.0*j*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 3)
					*pow(IonTrap.nu_list[kp], 3)*((exp(j*(a*IonTrap.nu_list[k]+(-a+e)*IonTrap.nu_list[kp]))
					*(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*cos(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							-j*sin(a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
							/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
									-IonTrap.nu_list[kp])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
											+IonTrap.nu_list[kp]))
							+(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
									-j*sin(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.
					+(exp(j*(b*IonTrap.nu_list[k]+(-b+e)*IonTrap.nu_list[kp]))
							*((-((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*cos(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									+j*sin(b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
									/(((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k]
											-IonTrap.nu_list[kp])
											*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k]
													+IonTrap.nu_list[kp]))
									+(-3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*sin(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													*(IonTrap.nu_list[k]-IonTrap.nu_list[kp]))
											/((3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k]-IonTrap.nu_list[kp])
													*(3.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
															-IonTrap.nu_list[k]+IonTrap.nu_list[kp]))))/2.))
			/(2.*exp(j*e*IonTrap.nu_list[kp])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							+pow(IonTrap.nu_list[k]-IonTrap.nu_list[kp], 2))*(IonTrap.nu_list[k]-IonTrap.nu_list[kp])
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
									*pow(IonTrap.nu_list[kp], 2)+pow(IonTrap.nu_list[kp], 4)));

	return result;
}

std::complex<double> alpha_4_2_2_integ_part_4_indeterminate(double a, double b, double c, double d, double e, double f,
		double t_p,
		double t_pp, double t_ppp, int k, int kp, experiment::ion_trap& IonTrap)
{

	const std::complex<double> j(0, 1);

	std::complex<double> result = -(0.08333333333333333*j
			*exp(-3.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+j*(c+e)*IonTrap.nu_list[k])
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)*IonTrap.nu_list[k]
			*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
			*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])-0.08333333333333333*j
			*exp(-3.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+j*(c+e)*IonTrap.nu_list[k])
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k], 2)*IonTrap.nu_list[k]
			*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
			*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])+0.08333333333333333*j
			*exp(j*(3.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(c+e)*IonTrap.nu_list[k]))
			*IonTrap.nu_list[k]*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
			*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])-0.08333333333333333*j
			*exp(j*(3.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(c+e)*IonTrap.nu_list[k]))
			*IonTrap.nu_list[k]*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
			*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k], 2)
			*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
			+j*exp(j*(2.0*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(a+c)*IonTrap.nu_list[k]))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+2.0*j*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*(IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+exp(j*(2.0*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+(b+c)*IonTrap.nu_list[k]))
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*(-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(-1.0*j*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+exp(-2.0*j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+j*(a+c)*IonTrap.nu_list[k])
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(-1.0*j*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			-exp(-2.0*j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+j*(b+c)*IonTrap.nu_list[k])
					*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
					*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
					*(-1.0*j*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+2.0*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
					*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)+pow(IonTrap.nu_list[k], 2))
					*(-1.0*j*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			+(exp(j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(-16.0*j*exp(j*(a+e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					+16.0*j*exp(j*(a+e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*IonTrap.nu_list[k]
					+4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
					-4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
					+8.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-8.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-32.0*j*exp(2.0*j*c*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*j*exp(2.0*j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 4)*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*exp(j*(a+c)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 4)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+8.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+4.0*j*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-12.0*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+12.0*exp(j*(a+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+exp(j*(c+e)*IonTrap.nu_list[k])
							*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(-3.0*j*pow(IonTrap.nu_list[k], 2)
									+8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(-1.0*j+a*IonTrap.nu_list[k]-c*IonTrap.nu_list[k])
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*(13.0*j-4.0*a*IonTrap.nu_list[k]+4.0*c*IonTrap.nu_list[k])+2.0*j
									*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+j*IonTrap.nu_list[k]
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+32.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*j*exp(2.0*j*c*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*j*exp(j*(a+c)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*j*exp(j*(a+c)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*IonTrap.nu_list[k]
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*j*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*j*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*j*exp(j*(a+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))/4.
			+(exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))*(16.0*j*exp(j*(b+e)*IonTrap.nu_list[k])
					*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
					-16.0*j*exp(j*(b+e)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*IonTrap.nu_list[k]
					-4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
					+4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
					-8.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+8.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
							*pow(cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+32.0*j*exp(2.0*j*c*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)*pow(IonTrap.nu_list[k], 2)
							*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*j*exp(2.0*j*c*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 4)*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*exp(j*(b+c)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*pow(IonTrap.nu_list[k], 4)*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-8.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					-4.0*j*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)
							*pow(sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))), 2)
					+12.0*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-12.0*exp(j*(b+e)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+exp(j*(c+e)*IonTrap.nu_list[k])
							*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(3.0*j*pow(IonTrap.nu_list[k], 2)
									+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
											*(-13.0*j+4.0*b*IonTrap.nu_list[k]-4.0*c*IonTrap.nu_list[k])
									+pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											*(8.0*j-8.0*b*IonTrap.nu_list[k]+8.0*c*IonTrap.nu_list[k])
									+2.0*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))-IonTrap.nu_list[k])
											*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					-32.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
							*IonTrap.nu_list[k]*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*j*exp(2.0*j*c*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-32.0*j*exp(j*(b+c)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 5)
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+32.0*j*exp(j*(b+c)*IonTrap.nu_list[k])
							*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)*IonTrap.nu_list[k]
							*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*j*exp(2.0*j*c*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					+8.0*j*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							*pow(IonTrap.nu_list[k], 2)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
					-8.0*j*exp(j*(b+c)*IonTrap.nu_list[k])*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
							*pow(IonTrap.nu_list[k], 3)*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
							*sin(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))/4.
			-(-(a*exp(j*(c+e)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*IonTrap.nu_list[k]*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2)
					+pow(IonTrap.nu_list[k], 4)))
					+exp(j*a*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(j*exp(j*e*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k], 2)
											+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*IonTrap.nu_list[k]
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-2.0*exp(j*c*IonTrap.nu_list[k])
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(e
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(exp(j*(c+e)*IonTrap.nu_list[k])
									*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*(3.0*j*pow(IonTrap.nu_list[k], 2)
											+8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													*(j+c*IonTrap.nu_list[k])
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
													*(13.0*j+4.0*c*IonTrap.nu_list[k])+2.0
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])
											*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
									+8.0*exp(2.0*j*c*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*(IonTrap.nu_list[k]
													*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(e
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
							/4.)/exp(j*a*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
			+(-(b*exp(j*(c+e)*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
					*IonTrap.nu_list[k]*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 4)
					-5.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)*pow(IonTrap.nu_list[k], 2)
					+pow(IonTrap.nu_list[k], 4)))
					+exp(j*b*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
							*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(j*exp(j*e*IonTrap.nu_list[k])*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
									*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
											+pow(IonTrap.nu_list[k], 2)
											+(2.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+3.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*IonTrap.nu_list[k]
													*sin(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
									-2.0*exp(j*c*IonTrap.nu_list[k])
											*(-4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													+pow(IonTrap.nu_list[k], 2))
											*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											*(IonTrap.nu_list[k]
													*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(e
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
					+((-2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
							*(exp(j*(c+e)*IonTrap.nu_list[k])
									*(-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))+IonTrap.nu_list[k])
									*(3.0*j*pow(IonTrap.nu_list[k], 2)
											+8.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)
													*(j+c*IonTrap.nu_list[k])
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*IonTrap.nu_list[k]
													*(13.0*j+4.0*c*IonTrap.nu_list[k])+2.0
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])
											*(-1.0*j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*cos(2.0*c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+IonTrap.nu_list[k]*sin(2.0*c
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))))
									+8.0*exp(2.0*j*c*IonTrap.nu_list[k])
											*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
											*(2.0*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													+IonTrap.nu_list[k])*(j*IonTrap.nu_list[k]
											*cos(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
											+(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))
													*sin(c*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
											*(IonTrap.nu_list[k]
													*cos(e*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)))
													+j*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*sin(e
															*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))))
							/4.)/exp(j*b*(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))))
			/(4.*exp(j*(c+e)*IonTrap.nu_list[k])
					*(4.0*pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 2)-pow(IonTrap.nu_list[k], 2))
					*pow(pow((IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p)), 3)
							-(IonTrap.delta[0][0]+IonTrap.get_stark_shift(0, t_p))*pow(IonTrap.nu_list[k], 2), 2));

	return result;
}

}